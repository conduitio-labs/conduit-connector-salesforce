// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package destination

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	ConfigClientID           = "clientID"
	ConfigClientSecret       = "clientSecret"
	ConfigInsecureSkipVerify = "insecureSkipVerify"
	ConfigOauthEndpoint      = "oauthEndpoint"
	ConfigPubsubAddress      = "pubsubAddress"
	ConfigRetryCount         = "retryCount"
	ConfigTopicName          = "topicName"
)

func (Config) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		ConfigClientID: {
			Default:     "",
			Description: "ClientID is the client id from the salesforce app",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigClientSecret: {
			Default:     "",
			Description: "ClientSecret is the client secret from the salesforce app",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigInsecureSkipVerify: {
			Default:     "false",
			Description: "InsecureSkipVerify disables certificate validation",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		ConfigOauthEndpoint: {
			Default:     "",
			Description: "OAuthEndpoint is the OAuthEndpoint from the salesforce app",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigPubsubAddress: {
			Default:     "api.pubsub.salesforce.com:7443",
			Description: "gRPC Pubsub Salesforce API address",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigRetryCount: {
			Default:     "10",
			Description: "Number of retries allowed per read before the connector errors out",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigTopicName: {
			Default:     "",
			Description: "Topic is Salesforce event or topic to write record",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
	}
}
